pipeline {
    agent {
        kubernetes {
            yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: docker
    image: 508058148115.dkr.ecr.us-east-1.amazonaws.com/jenkins:latest
    command:
    - cat
    tty: true
    volumeMounts:
    - mountPath: /var/run/docker.sock
      name: docker-sock
    - mountPath: /home/jenkins/agent
      name: workspace-volume
  volumes:
  - name: docker-sock
    hostPath:
      path: /var/run/docker.sock
  - name: workspace-volume
    emptyDir: {}
"""
        }
    }
    stages {
        // stage('Vulnerability Scan') {
        //     steps {
        //         container('docker') {
        //             sh 'docker scan $ECR_URL:latest'
        //         }
        //     }
        // }
        // stage('Test') {
        //     steps {
        //         container('docker') {
        //             sh 'pytest tests/'
        //         }
        //     }
        // }
        stage('ECR Login') {
            steps {
                container('docker') {
                    sh '''
                        echo "Logging into ECR..."
                        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 508058148115.dkr.ecr.us-east-1.amazonaws.com
                    '''
                }
            }
        }
        stage('Docker Build and Push') {
            steps {
                container('docker') {
                    sh '''
                        echo "Building Docker image..."
                        docker build -f services/Dockerfile -t 508058148115.dkr.ecr.us-east-1.amazonaws.com/movies-service:latest .
                        echo "Pushing Docker image to ECR..."
                        docker push 508058148115.dkr.ecr.us-east-1.amazonaws.com/movies-service:latest
                    '''
                }
            }
        }
        // stage('Deploy') {
        //     steps {
        //         sh '''
        //         helm upgrade --install movies-service ./helm-charts/movies-service \
        //             --set image.repository=$ECR_URL \
        //             --set image.tag=latest
        //         '''
        //     }
        // }
    }
}